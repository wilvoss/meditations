let r=document.querySelector(":root"),allBlinds=[],midPoint=window.innerWidth/2;var tempY,allDrawnBlinds,tempX=midPoint;function touchMove(t){trackTouch(t)}function touchStart(t){trackTouch(t)}function addBlinds(t=!0){const e=window.innerWidth/20;for(let t=0;t<e;t++){const e=document.createElement("blind");e.style.left=20*t+"px",e.style.transform="rotate3d(0,1,0,"+(tempX/20-t)+"deg) matrix(1, 0, 0, 1, 0, 0)",allBlinds.push(e)}applyAddBlinds(),t&&toggleNav(event),updateLayout()}function applyAddBlinds(){const t=document.getElementsByTagName("blinds")[0];for(let e=0;e<allBlinds.length;e++){const n=allBlinds[e];t.appendChild(n)}allDrawnBlinds=document.getElementsByTagName("blind")}function updateLayout(){allDrawnBlinds=document.getElementsByTagName("blind");for(let t=0;t<allDrawnBlinds.length;t++){allDrawnBlinds[t].storedTransform="rotate3d(0,1,0,"+(90-(tempX/20-t))+"deg) matrix(1, 0, 0, 1, 0, 0)"}applyUpdate()}function applyUpdate(){allDrawnBlinds=document.getElementsByTagName("blind");for(let t=0;t<allDrawnBlinds.length;t++){const e=allDrawnBlinds[t];e.style.transform=e.storedTransform}}function trackTouch(t){return tempX=t.touches[0].pageX,tempY=t.touches[0].pageY,tempX<0&&(tempX=0),tempY<0&&(tempY=0),touchDetected=!0}function pointerMove(t){return tempX=t.clientX,tempY=t.clientY,updateLayout(),mouseDetected=!0}function resetBlinds(){allBlinds=[];document.getElementsByTagName("blinds")[0].innerHTML="",addBlinds(!1)}window.addEventListener("pointermove",pointerMove),window.onload=addBlinds,window.onresize=resetBlinds;