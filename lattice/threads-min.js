class FabricObject{constructor(e){this.id=null==e.id?"":e.id,this.threads=null==e.threads?[]:e.threads,this.storedTransform=null==e.storedTransform?"":e.storedTransform}}let r=document.querySelector(":root");var drawnThreads,threadsElement,threadsInterval,allThreads=[],allThings=[],previousX=0,previousY=0,tempX=0,tempY=0,influence=-1,pointerDown=!1,useASinH=!1,width=10,useDark=!1,distance=400;function addThreads(){for(let e=0;e<4;e++){const t=new FabricObject({});t.id="fabric"+e;let n=window.innerWidth/4;for(let r=0;r<n;r++){const n=document.createElement("canvas"),r=window.innerWidth/window.innerHeight;n.style.left=getRandomInt(-distance*r,window.innerWidth+distance)+"px",n.style.top=getRandomInt(-distance*r,window.innerHeight+distance)+"px",n.style.zIndex=e,n.style.transform="translate(0px, 0px)",t.threads.push(n)}allThreads.push(t)}applyAddThreads()}function applyAddThreads(){threadsElement=document.getElementsByTagName("fabric")[0];for(let e=0;e<allThreads.length;e++){const t=allThreads[e],n=document.createElement("fabric");n.id=t.id;for(let e=0;e<t.threads.length;e++){const r=t.threads[e];n.appendChild(r)}threadsElement.appendChild(n)}updateFabrics(!0)}function updateFabrics(){for(let t=0;t<allThreads.length;t++){const n=allThreads[t];var e="translate("+(t+1)*(window.innerWidth/100*tempX)/100+"px, "+(t+1)*(window.innerHeight/100*tempY)/100+"px)";n.storedTransform=e}applyFabricsTransforms()}var mylatesttap,contracting=!1,threadsMoving=!1;function updateThreads(e){e.preventDefault(),window.clearTimeout(threadsInterval),threadsMoving=!0;let t=document.getElementsByTagName("canvas");if(contracting){contracting=!1;for(let e=0;e<t.length;e++){t[e].storedTransform="translate(0px, 0px)"}}else{contracting=!0;for(let e=0;e<t.length;e++){const a=t[e];var n=tempX+a.clientWidth/2-Number(a.style.left.replace("px","")),r=tempY+a.clientHeight/2-Number(a.style.top.replace("px",""));a.storedTransform="translate("+n+"px, "+r+"px)"}}applyThreadsTransforms(),threadsInterval=window.setTimeout((()=>{threadsMoving=!1}),2e3)}function applyThreadsTransforms(){let e=document.getElementsByTagName("canvas");for(let t=0;t<e.length;t++){const n=e[t];n.style.transform=n.storedTransform}}function applyFabricsTransforms(){for(let e=0;e<allThreads.length;e++){const t=allThreads[e];document.getElementById(t.id).style.transform=t.storedTransform}}function touchMove(e){trackTouch(e)}function touchStart(e){trackTouch(e)}function trackTouch(e){return tempX=e.touches[0].pageX,tempY=e.touches[0].pageY,tempX<0&&(tempX=0),tempY<0&&(tempY=0),threadsMoving||updateFabrics(),touchDetected=!0}function pointerMove(e){return tempX=e.clientX,tempY=e.clientY,threadsMoving||updateFabrics(),mouseDetected=!0}window.addEventListener("pointermove",pointerMove),window.onload=addThreads;